class Solution {
public:
    void backtrack(int n, int o,int c,vector<string>&ans,string s){
        if(s.length()==2*n){
            ans.push_back(s);
            return;
        }
        if(o<n)backtrack(n,o+1,c,ans,s+"(");
        if(c<o) backtrack(n,o,c+1,ans,s+")");
    }
    vector<string> generateParenthesis(int n) {
        vector<string>ans;
        string s="";
        backtrack(n,0,0,ans,s);
        return ans;
    }
};
