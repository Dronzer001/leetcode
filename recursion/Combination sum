class Solution {
public:
    void backtrack(int index,vector<int>&mid,vector<vector<int>>&ans,vector<int>& nums, int target,int sum){
        if(sum>target) return;
        if(sum==target){
            ans.push_back(mid);
            return;
        }
        for(int i=index;i<nums.size();i++){
            mid.push_back(nums[i]);
            backtrack(i,mid,ans,nums,target,sum+nums[i]);
            mid.pop_back();
        }                                    
    }
    vector<vector<int>> combinationSum(vector<int>& candidates, int target) {
        vector<vector<int>>ans;
        vector<int>mid;
        sort(candidates.begin(),candidates.end());
        backtrack(0,mid,ans,candidates,target,0);
        return ans;
    }                                                                                                                        
};
